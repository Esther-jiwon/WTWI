<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qnaboardMapper">


	<!-- 페이지네이션 -->
	<resultMap type="QnaPagination" id="pg_rm">
		<result property="listCount" column="CNT" />
	</resultMap>

	<!-- 카테고리 -->
	<resultMap type="QnaCategory" id="category_rm">
		<id property="qnaCategoryNo" column="QNA_CATEGORY_NO" />
		<result property="qnaCategoryNm" column="QNA_CATEGORY_NM" />
	</resultMap>

	<!-- 문의게시글 -->
	<resultMap type="QnaBoard" id="qna_rm">
		<id property="qnaNo" column="QNA_NO" />

		<result property="qnaPno" column="QNA_PNO" />
		<result property="qnaTitle" column="QNA_TITLE" />
		<result property="qnaContent" column="QNA_CONTENT" />
		<result property="qnaReadCount" column="QNA_READ_COUNT" />
		<result property="qnaCreateDt" column="QNA_CREATE_DT" />
		<result property="qnaModifyDt" column="QNA_MODIFY_DT" />
		<result property="qnaStatus" column="QNA_STATUS" />
		<result property="qnaCategoryNo" column="QNA_CATEGORY_NO" />
		<result property="qnaCategoryNm" column="QNA_CATEGORY_NM" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberNick" column="MEMBER_NICK" />
		<result property="memberGrade" column="MEMBER_GRADE" />
		
		<result property="preNo" column="PRE_NO" />
		<result property="nextNo" column="NEXT_NO" />
		

	</resultMap>


	<!-- 게시글 목록 갯수 조회 -->
	<select id="getListCount" resultMap="pg_rm">
		SELECT COUNT(*) CNT FROM
		QNA_LIST WHERE QNA_STATUS='Y' OR QNA_STATUS= 'S'
	</select>

	<!-- 게시글 목록 갯수 조회 (검색)  -->
	<select id="getSearchListCount" parameterType="QnaSearch" resultMap="pg_rm">
			SELECT COUNT(*) CNT FROM QNA_LIST WHERE QNA_STATUS='Y' OR QNA_STATUS= 'S'
			<choose>
				<when test="sv!=null">
					AND
					<bind name="val" value="'%' +sv+ '%'"/>
					<choose>
						<when test="sk=='title'">
							QNA_TITLE LIKE #{val}
						</when>
						<when test="sk=='content'">
							QNA_CONTENT LIKE #{val}
						</when>
						<when test="sk=='ticontent'">
							(QNA_TITLE LIKE #{val} OR QNA_CONTENT LIKE #{val})
						</when>
						<when test="sk=='writer'">
							MEMBER_NICK LIKE #{val}
						</when>
						<when test="sk=='category'">
							QNA_CATEGORY_NO = #{sc} AND (QNA_TITLE LIKE #{val} OR QNA_CONTENT LIKE #{val})
						</when>
					</choose>
				</when>
				<otherwise>
					AND QNA_CATEGORY_NO = #{sc}
				</otherwise>
			</choose>
	</select>

	<!-- 계층형 게시글 목록 조회  -->
	<select id="selectBoardList" parameterType="_int" resultMap="qna_rm">
		SELECT QNA_NO, QNA_PNO, QNA_CATEGORY_NM,
		(LPAD('', 3*(LEVEL)) || QNA_TITLE) AS QNA_TITLE,
		MEMBER_NO, MEMBER_NICK, MEMBER_GRADE,
		QNA_READ_COUNT, QNA_CREATE_DT, QNA_STATUS
		FROM QNA_LIST
		WHERE QNA_STATUS IN ('Y','S')
		START WITH QNA_PNO IS NULL
		CONNECT BY PRIOR QNA_NO = QNA_PNO
		ORDER SIBLINGS BY QNA_NO DESC
	</select>
	
	<!-- 계층형 게시글 목록 조회(검색)  -->
	<select id="selectSearchBoardList" parameterType="QnaSearch" resultMap="qna_rm">
        SELECT QNA_NO, QNA_PNO,QNA_CATEGORY_NO, QNA_CATEGORY_NM,
        LPAD(' ', 3*(LEVEL)) || QNA_TITLE AS QNA_TITLE,
        QNA_CONTENT,
        MEMBER_NICK, QNA_READ_COUNT, QNA_CREATE_DT, QNA_STATUS
        FROM QNA_LIST
        WHERE QNA_STATUS IN ('Y','S')
		<choose>
			<when test="sv!=null">
				AND
				<bind name="val" value="'%' +sv+ '%'"/>
				<choose>
					<when test="sk=='title'">
						QNA_TITLE LIKE #{val}
					</when>
					<when test="sk=='content'">
						QNA_CONTENT LIKE #{val}
					</when>
					<when test="sk=='ticontent'">
						(QNA_TITLE LIKE #{val} OR QNA_CONTENT LIKE #{val})
					</when>
					<when test="sk=='writer'">
						MEMBER_NICK LIKE #{val}
					</when>
					<when test="sk=='category'">
						QNA_CATEGORY_NO = #{sc} AND (QNA_TITLE LIKE #{val} OR QNA_CONTENT LIKE #{val})
					</when>
				</choose>
			</when>
			<otherwise>
				AND QNA_CATEGORY_NO = #{sc}
			</otherwise>
		</choose>
		START WITH QNA_PNO IS NULL
        CONNECT BY PRIOR QNA_NO = QNA_PNO
		ORDER SIBLINGS BY QNA_NO DESC
	</select>
	
	<select id="selectBoard" parameterType="_int" resultMap="qna_rm">
	 SELECT A.*
    FROM
    (SELECT QNA_NO, QNA_CATEGORY_NO, QNA_CATEGORY_NM, QNA_TITLE, QNA_CONTENT,
     MEMBER_NO, MEMBER_NICK, MEMBER_GRADE, QNA_READ_COUNT, QNA_CREATE_DT, QNA_MODIFY_DT,QNA_STATUS,
     LEAD(QNA_NO, 1) OVER (ORDER BY QNA_NO DESC) AS PRE_NO,
     LAG(QNA_NO, 1) OVER (ORDER BY QNA_NO DESC) AS NEXT_NO
    FROM QNA_BOARD
    JOIN QNA_CATEGORY USING(QNA_CATEGORY_NO)
    JOIN MEMBER USING(MEMBER_NO)
    WHERE QNA_STATUS IN ('Y','S')
    
    )A
    WHERE A.QNA_NO = #{qnaNo}
	
<!-- 		SELECT QNA_NO,QNA_CATEGORY_NO, QNA_CATEGORY_NM, QNA_TITLE, QNA_CONTENT,
		MEMBER_NO, MEMBER_NICK, MEMBER_GRADE, QNA_READ_COUNT, QNA_CREATE_DT, QNA_MODIFY_DT,QNA_STATUS
		FROM QNA_BOARD
		JOIN QNA_CATEGORY USING(QNA_CATEGORY_NO)
		JOIN MEMBER USING(MEMBER_NO)
		WHERE QNA_NO = #{qnaNo}
		AND QNA_STATUS IN ('Y','S')  -->
	</select>
	
	<update id="increaseReadCount" parameterType="_int">
		 UPDATE QNA_BOARD SET
		 QNA_READ_COUNT = QNA_READ_COUNT + 1
		 WHERE QNA_NO = #{qnaNo}
	</update>
	
	<select id="selectCategory" resultMap="category_rm">
		SELECT * FROM QNA_CATEGORY
	</select>
	
	<insert id="insertBoard" parameterType="QnaBoard">
		<selectKey keyProperty="qnaNo" resultType="_int" order="BEFORE">
			SELECT SEQ_QBNO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO QNA_BOARD
		VALUES(#{qnaNo},NULL,#{qnaTitle},#{qnaContent},DEFAULT,DEFAULT,DEFAULT,#{qnaStatus},#{qnaCategoryNo},#{memberNo})
	</insert>

	<insert id="insertBoardRe" parameterType="QnaBoard">
		<selectKey keyProperty="qnaNo" resultType="_int" order="BEFORE">
			SELECT SEQ_QBNO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO QNA_BOARD
		VALUES(#{qnaNo},#{qnaPno},#{qnaTitle},#{qnaContent},DEFAULT,DEFAULT,DEFAULT,#{qnaStatus},#{qnaCategoryNo},#{memberNo})
	</insert>
	
	<update id="updateBoard" parameterType="QnaBoard">
		UPDATE QNA_BOARD SET
		QNA_CATEGORY_NO = ${qnaCategoryNo}, QNA_TITLE = #{qnaTitle}, QNA_CONTENT = #{qnaContent}, QNA_STATUS = #{qnaStatus}
		WHERE QNA_NO = #{qnaNo}
	</update>
	
	<update id="deleteBoard" parameterType="_int">
		UPDATE QNA_BOARD SET
		QNA_STATUS='N'
		WHERE QNA_NO = #{qnaNo}
	</update>
	
	
	<!-- 관리자의 경우  -->
 	<select id="selectPreBoard" parameterType="_int" resultMap="qna_rm">
	 SELECT A.*
    FROM
    (SELECT QNA_NO, QNA_CATEGORY_NO, QNA_CATEGORY_NM, QNA_TITLE, QNA_CONTENT,
     MEMBER_NO, MEMBER_NICK, MEMBER_GRADE, QNA_READ_COUNT, QNA_CREATE_DT, QNA_MODIFY_DT,QNA_STATUS,
     LEAD(QNA_NO, 1) OVER (ORDER BY QNA_NO DESC) AS PRE_NO,
     LAG(QNA_NO, 1) OVER (ORDER BY QNA_NO DESC) AS NEXT_NO
    FROM QNA_BOARD
    JOIN QNA_CATEGORY USING(QNA_CATEGORY_NO)
    JOIN MEMBER USING(MEMBER_NO)
	WHERE QNA_STATUS IN ('Y','S')
    )A
    WHERE A.QNA_NO = #{qnaNo}

	</select>


	<!-- 회원의 경우  -->
 	<select id="selectPreBoard1" parameterType="QnaBoard" resultMap="qna_rm">
	 SELECT A.*
    FROM
    (SELECT QNA_NO, QNA_CATEGORY_NO, QNA_CATEGORY_NM, QNA_TITLE, QNA_CONTENT,
     MEMBER_NO, MEMBER_NICK, MEMBER_GRADE, QNA_READ_COUNT, QNA_CREATE_DT, QNA_MODIFY_DT,QNA_STATUS,
     LEAD(QNA_NO, 1) OVER (ORDER BY QNA_NO DESC) AS PRE_NO,
     LAG(QNA_NO, 1) OVER (ORDER BY QNA_NO DESC) AS NEXT_NO
    FROM QNA_BOARD
    JOIN QNA_CATEGORY USING(QNA_CATEGORY_NO)
    JOIN MEMBER USING(MEMBER_NO)
	WHERE QNA_STATUS = 'Y'
	OR MEMBER_NO = #{memberNo}
    )A
    WHERE A.QNA_NO = #{qnaNo}
	</select>
	
	
	<!-- 비회원인의 경우  -->
 	<select id="selectPreBoard2" parameterType="_int" resultMap="qna_rm">
	 SELECT A.*
    FROM
    (SELECT QNA_NO, QNA_CATEGORY_NO, QNA_CATEGORY_NM, QNA_TITLE, QNA_CONTENT,
     MEMBER_NO, MEMBER_NICK, MEMBER_GRADE, QNA_READ_COUNT, QNA_CREATE_DT, QNA_MODIFY_DT,QNA_STATUS,
     LEAD(QNA_NO, 1) OVER (ORDER BY QNA_NO DESC) AS PRE_NO,
     LAG(QNA_NO, 1) OVER (ORDER BY QNA_NO DESC) AS NEXT_NO
    FROM QNA_BOARD
    JOIN QNA_CATEGORY USING(QNA_CATEGORY_NO)
    JOIN MEMBER USING(MEMBER_NO)
	WHERE QNA_STATUS = 'Y'
    )A
    WHERE A.QNA_NO = #{qnaNo}

	</select>
</mapper>
