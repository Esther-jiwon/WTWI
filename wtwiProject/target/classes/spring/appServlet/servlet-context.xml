<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
  
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- By 지원. 소셜 로그인 Bean 등록 -->
	<!-- oauth2 login / naver -->
	<beans:bean id="naverClientID" class="java.lang.String">
		<beans:constructor-arg value="0pbxHHRrlWo9BKNmQb_g"/>
	</beans:bean>
	<beans:bean id="naverClientSecret" class="java.lang.String">
		<beans:constructor-arg value="tMnpH84LBV"/>
	</beans:bean>
	<beans:bean id="naverRedirectUrl" class="java.lang.String">
		<beans:constructor-arg value="http://localhost:8080/wtwi/member/auth/naver/callback"/>
	</beans:bean>
	<beans:bean id="naverSns" class="com.wtwi.fin.auth.SNSValue">
		<beans:constructor-arg value="naver"/>
		<beans:constructor-arg ref="naverClientID"/>
		<beans:constructor-arg ref="naverClientSecret"/>
		<beans:constructor-arg ref="naverRedirectUrl"/>
	</beans:bean>
	
	<!-- oauth2 login / facebook -->
	<beans:bean id="facebookClientID" class="java.lang.String">
		<beans:constructor-arg value="943894909536929"/>
	</beans:bean>
	<beans:bean id="facebookClientSecret" class="java.lang.String">
		<beans:constructor-arg value="c1ba5ee77740d079a5759c2adfdb0bce"/>
	</beans:bean>
	<beans:bean id="facebookRedirectUrl" class="java.lang.String">
		<beans:constructor-arg value="http://localhost:8080/wtwi/member/auth/facebook/callback"/>
	</beans:bean>
	<beans:bean id="facebookSns" class="com.wtwi.fin.auth.SNSValue">
		<beans:constructor-arg value="facebook"/>
		<beans:constructor-arg ref="facebookClientID"/>
		<beans:constructor-arg ref="facebookClientSecret"/>
		<beans:constructor-arg ref="facebookRedirectUrl"/>
	</beans:bean>

	
	<!-- oauth2 login / google -->
	<beans:bean id="googleClientID" class="java.lang.String">
		<beans:constructor-arg value="908088894096-skhooibsicepdvthfedldfhdb1ajipcd.apps.googleusercontent.com"/>
	</beans:bean>
	<beans:bean id="googleClientSecret" class="java.lang.String">
		<beans:constructor-arg value="2JJtZSsgj1yfux1e5X7JCmY9"/>
	</beans:bean>
	<beans:bean id="googleRedirectUrl" class="java.lang.String">
		<beans:constructor-arg value="http://localhost:8080/wtwi/member/auth/google/callback"/>
	</beans:bean>
	<beans:bean id="googleSns" class="com.wtwi.fin.auth.SNSValue">
		<beans:constructor-arg value="google"/>
		<beans:constructor-arg ref="googleClientID"/>
		<beans:constructor-arg ref="googleClientSecret"/>
		<beans:constructor-arg ref="googleRedirectUrl"/>
	</beans:bean>
	
	
	<beans:bean id="googleConnectionFactory" class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg ref="googleClientID"/>
		<beans:constructor-arg ref="googleClientSecret"/>
	</beans:bean>
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"/>
		<!-- bean<beans:property name="scope" value=""https://www.googleapis.com/auth/plus.login"/> -->
		<beans:property name="redirectUri" value="http://localhost:8080/wtwi/member/auth/google/callback"/>
	</beans:bean>
	
	<context:component-scan base-package="com.wtwi.fin" />
	
	<!-- ChatWebSocketHandler 클래스를 bean으로 등록 -->
	<beans:bean id="chatHandler" class="com.wtwi.fin.chat.websocket.ChatWebSocketHandler" />
	
	<!-- /chat 이라는 주소로 오는 웹소켓 요청을 ChatWebSocketHandler와 연결하기 -->
 	<websocket:handlers>
		<websocket:mapping handler="chatHandler" path="/chat" />
		<websocket:handshake-interceptors>
			<!-- interceptor : HTTP 통신에서 requests, response를 가로채는 역할 
				 handshake	 : HttpSession에 있는 값을 가로채서 WebSocketSession에 넣어주는 역할
			-->
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
		</websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>
	
	
	
	<!-- Interceptor(권한 처리) 적용 -->
	<task:annotation-driven/>
	<interceptors> 
	  <interceptor> 
	   <!-- 적용 url -->
	   <mapping path="/myPage/**" /> 
	   <mapping path="/member/logout" /> 
	   <!-- 예외처리 
	   <exclude-mapping path="/main"/>  -->
	   <!-- 적용 interceptor -->   
	   <beans:bean id="loginInterceptor" class="com.wtwi.fin.common.interceptor.LoginInterceptor" />  
	
	  </interceptor> 
	  <interceptor> 
	   <!-- 적용 url -->
	   <mapping path="/admin/**" /> 
	   <!-- 예외처리 
	   <exclude-mapping path="/main"/>  -->
	   <!-- 적용 interceptor -->   
	   <beans:bean id="AuthInterceptor" class="com.wtwi.fin.common.interceptor.AuthInterceptor" />  
	
	  </interceptor> 
	</interceptors>
	
</beans:beans>
